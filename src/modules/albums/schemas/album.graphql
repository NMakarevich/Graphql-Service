type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}

type Albums {
    items: [Album]
    limit: Int,
    offset: Int,
    total: Int
}

extend type Query {
    albums(limit: Int, offset: Int): Albums
    album(id: ID!): Album
}

type Mutation {
    createAlbum(name: String!, released: Int, artistsIds: [ID], bandsIds: [ID], trackIds: [ID], genresIds: [ID],): Album
    updateAlbum(id: ID!, name: String, released: Int, artistsIds: [ID], bandsIds: [ID], tracksIds: [ID], genresIds: [ID]): Album
    deleteAlbum(id: ID!): DEL
}