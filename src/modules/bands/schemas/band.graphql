type Band {
    id: ID!
    name: String
    origin: String
    members: [Member]
    website: String
    genres: String
}

type Member {
    artistId: ID!
    instrument: String
    years: [Int]
}

input MemberI {
    artistId: ID!
    instrument: String
    years: [Int]
}

type Bands {
    items: [Band]
    limit: Int,
    offset: Int,
    total: Int
}

extend type Query {
    bands(limit: Int, offset: Int): Bands
    band(id: ID!): Band
}

extend type Mutation {
    createBand(name: String!, origin: String, website: String, genresIds: [String]): Band
    deleteBand(id: ID!): DEL
    updateBand(id: ID!, members: [MemberI]): Band
}